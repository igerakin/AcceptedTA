# Docker-specific configuration
spring.application.name=Technical Assessment (Docker)

# Server Configuration
server.port=8080
server.address=0.0.0.0

# H2 Database Configuration (Docker optimized)
spring.datasource.url=jdbc:h2:mem:technicalassessment;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false

# H2 Console Configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

# Data Initialization
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:SportsMatchData.sql

# Logging Configuration (Docker optimized)
logging.level.com.example.technicalassessment=INFO
logging.level.root=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Connection Pool Configuration (Docker optimized)
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=3
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000

# Actuator for health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.health.defaults.enabled=true
